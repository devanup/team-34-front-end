[{"/Users/devanup/Website/Employee Management/Team-34-Front-End/t34-app/src/index.js":"1","/Users/devanup/Website/Employee Management/Team-34-Front-End/t34-app/src/App.js":"2","/Users/devanup/Website/Employee Management/Team-34-Front-End/t34-app/src/components/Navigation/Navigation.js":"3","/Users/devanup/Website/Employee Management/Team-34-Front-End/t34-app/src/components/Overview/Overview.js":"4","/Users/devanup/Website/Employee Management/Team-34-Front-End/t34-app/src/components/Tasks/Tasks.js":"5","/Users/devanup/Website/Employee Management/Team-34-Front-End/t34-app/src/components/Employees/Employees.js":"6","/Users/devanup/Website/Employee Management/Team-34-Front-End/t34-app/src/pages/EmployeesPage.js":"7","/Users/devanup/Website/Employee Management/Team-34-Front-End/t34-app/src/pages/Dashboard.js":"8","/Users/devanup/Website/Employee Management/Team-34-Front-End/t34-app/src/pages/TasksPage.js":"9","/Users/devanup/Website/Employee Management/Team-34-Front-End/t34-app/src/pages/TaskPage.js":"10","/Users/devanup/Website/Employee Management/Team-34-Front-End/t34-app/src/pages/EmployeePage.js":"11","/Users/devanup/Website/Employee Management/Team-34-Front-End/t34-app/src/components/Employees/AddEmployeeForm.js":"12","/Users/devanup/Website/Employee Management/Team-34-Front-End/t34-app/src/components/Tasks/CreateTaskForm.js":"13","/Users/devanup/Website/Employee Management/Team-34-Front-End/t34-app/src/components/Employees/fetchEmployees.js":"14","/Users/devanup/Website/Employee Management/Team-34-Front-End/t34-app/src/components/Tasks/fetchTasks.js":"15","/Users/devanup/Website/Employee Management/Team-34-Front-End/t34-app/src/components/Employees/createEmployee.js":"16","/Users/devanup/Website/Employee Management/Team-34-Front-End/t34-app/src/components/Employees/deleteEmployee.js":"17","/Users/devanup/Website/Employee Management/Team-34-Front-End/t34-app/src/components/Employees/updateEmployee.js":"18","/Users/devanup/Website/Employee Management/Team-34-Front-End/t34-app/src/components/Employees/EmployeeContext.js":"19","/Users/devanup/Website/Employee Management/Team-34-Front-End/t34-app/src/components/Employees/fetchEmployeeByID.js":"20","/Users/devanup/Website/Employee Management/Team-34-Front-End/t34-app/src/components/Tasks/TaskContext.js":"21","/Users/devanup/Website/Employee Management/Team-34-Front-End/t34-app/src/components/Tasks/createTask.js":"22","/Users/devanup/Website/Employee Management/Team-34-Front-End/t34-app/src/components/Tasks/fetchTaskByID.js":"23","/Users/devanup/Website/Employee Management/Team-34-Front-End/t34-app/src/components/Tasks/deleteTask.js":"24","/Users/devanup/Website/Employee Management/Team-34-Front-End/t34-app/src/components/Employees/AvailableEmployees.js":"25","/Users/devanup/Website/Employee Management/Team-34-Front-End/t34-app/src/components/Employees/EmployeeNameContext.js":"26"},{"size":276,"mtime":1682545821824,"results":"27","hashOfConfig":"28"},{"size":921,"mtime":1683693140181,"results":"29","hashOfConfig":"28"},{"size":1440,"mtime":1683693140182,"results":"30","hashOfConfig":"28"},{"size":1511,"mtime":1683851557391,"results":"31","hashOfConfig":"28"},{"size":7536,"mtime":1684271867267,"results":"32","hashOfConfig":"28"},{"size":5709,"mtime":1684248787605,"results":"33","hashOfConfig":"28"},{"size":2547,"mtime":1684249438203,"results":"34","hashOfConfig":"28"},{"size":684,"mtime":1684261966306,"results":"35","hashOfConfig":"28"},{"size":2698,"mtime":1684249355737,"results":"36","hashOfConfig":"28"},{"size":7845,"mtime":1684255789499,"results":"37","hashOfConfig":"28"},{"size":9077,"mtime":1684262141108,"results":"38","hashOfConfig":"28"},{"size":3628,"mtime":1684250723178,"results":"39","hashOfConfig":"28"},{"size":5026,"mtime":1684271504607,"results":"40","hashOfConfig":"28"},{"size":289,"mtime":1683852429964,"results":"41","hashOfConfig":"28"},{"size":651,"mtime":1684255436013,"results":"42","hashOfConfig":"28"},{"size":324,"mtime":1683771392811,"results":"43","hashOfConfig":"28"},{"size":323,"mtime":1684189753418,"results":"44","hashOfConfig":"28"},{"size":351,"mtime":1683832498097,"results":"45","hashOfConfig":"28"},{"size":420,"mtime":1684183028801,"results":"46","hashOfConfig":"28"},{"size":314,"mtime":1684190622940,"results":"47","hashOfConfig":"28"},{"size":376,"mtime":1684248587292,"results":"48","hashOfConfig":"28"},{"size":304,"mtime":1684250217869,"results":"49","hashOfConfig":"28"},{"size":302,"mtime":1684255522164,"results":"50","hashOfConfig":"28"},{"size":303,"mtime":1684256401898,"results":"51","hashOfConfig":"28"},{"size":2294,"mtime":1684363157160,"results":"52","hashOfConfig":"28"},{"size":547,"mtime":1684271592300,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},"2uh1vv",{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/devanup/Website/Employee Management/Team-34-Front-End/t34-app/src/index.js",[],[],[],"/Users/devanup/Website/Employee Management/Team-34-Front-End/t34-app/src/App.js",[],[],"/Users/devanup/Website/Employee Management/Team-34-Front-End/t34-app/src/components/Navigation/Navigation.js",[],[],"/Users/devanup/Website/Employee Management/Team-34-Front-End/t34-app/src/components/Overview/Overview.js",["142","143","144","145","146","147","148"],[],"import './overview.css';\nimport { Card, Col, Container, Row } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n\tfaClipboardList,\n\tfaClipboardCheck,\n\tfaPeopleGroup,\n} from '@fortawesome/free-solid-svg-icons';\n\nfunction Overview() {\n\treturn (\n\t\t<Card className='overview p-0'>\n\t\t\t<Card.Body className='p-0'>\n\t\t\t\t<h2 className='sans-serif mt-2 mb-5'>Dashboard</h2>\n\t\t\t\t{/* <Container fluid className='p-0 mt-5'>\n\t\t\t\t\t<Row className='text-center'>\n\t\t\t\t\t\t<Col md>\n\t\t\t\t\t\t\t<Card className='card task-card p-3 mb-4'>\n\t\t\t\t\t\t\t\t<div className='icon mt-3 mb-3'>\n\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faClipboardList} />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<h5 className='sans-serif'>Tasks</h5>\n\t\t\t\t\t\t\t\t<h6 className='mb-2 card-count-display'>48</h6>\n\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col md>\n\t\t\t\t\t\t\t<Card className='card completed-card p-3 mb-4'>\n\t\t\t\t\t\t\t\t<div className='icon mt-3 mb-3'>\n\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faClipboardCheck} />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<h5 className='sans-serif'>Completed</h5>\n\t\t\t\t\t\t\t\t<h6 className='mb-2 card-count-display'>48</h6>\n\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col md>\n\t\t\t\t\t\t\t<Card className='card employees-card p-3 mb-4'>\n\t\t\t\t\t\t\t\t<div className='icon mt-3 mb-3'>\n\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faPeopleGroup} />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<h5 className='sans-serif'>Employees</h5>\n\t\t\t\t\t\t\t\t<h6 className='mb-2 card-count-display'>48</h6>\n\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container> */}\n\t\t\t</Card.Body>\n\t\t</Card>\n\t);\n}\n\nexport default Overview;\n","/Users/devanup/Website/Employee Management/Team-34-Front-End/t34-app/src/components/Tasks/Tasks.js",["149","150","151","152","153","154"],[],"import './tasks.css';\nimport { Row, Col, Card, Button, Table, Container } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n\tfaCircle,\n\tfaClock,\n\tfaCheckCircle,\n\tfaEye,\n} from '@fortawesome/free-regular-svg-icons';\nimport { faPlus, faXmark } from '@fortawesome/free-solid-svg-icons';\nimport { Link } from 'react-router-dom';\nimport { useContext, useState, useEffect } from 'react';\nimport { CreateTaskForm } from './CreateTaskForm';\n// import { TaskPage } from '../../pages/TaskPage';\nimport { Routes, Route, useNavigate } from 'react-router-dom';\nimport TaskContext from './TaskContext';\nimport { fetchTasks } from './fetchTasks';\nimport { fetchTaskByID } from './fetchTaskByID';\nimport { deleteTask } from './deleteTask';\n\nfunction Tasks({\n\tshowActions,\n\tshowCreateNewTaskButton,\n\tshowViewTaskButton,\n\ttasksByEmpl,\n\ttasksByEmplCount,\n\temployeeName,\n\thideDeleteButton,\n}) {\n\tconst { tasks, updateTasks } = useContext(TaskContext);\n\tconst [displayForm, setDisplayForm] = useState(false);\n\tconst [selectedTask, setSelectedTask] = useState(null);\n\tconst [employeeNames, setEmployeeNames] = useState({});\n\n\tuseEffect(() => {\n\t\t// Fetch employees when the component mounts\n\t\tfetchTaskData();\n\t}, []);\n\n\tasync function fetchTaskData() {\n\t\tconst data = await fetchTasks();\n\t\tawait updateTasks(data);\n\t\tawait fetchEmployeeNames(data);\n\t}\n\n\tasync function fetchEmployeeNames(tasks) {\n\t\tconst names = { ...employeeNames }; // Copy the existing employeeNames object\n\n\t\tfor (const task of tasks) {\n\t\t\tif (!names[task.id]) {\n\t\t\t\tconst employeeName = await getEmployeeName(task);\n\t\t\t\tnames[task.id] = employeeName;\n\t\t\t}\n\t\t}\n\t\tsetEmployeeNames(names);\n\t}\n\n\tasync function getEmployeeName(task) {\n\t\ttry {\n\t\t\tconst taskDetails = await fetchTaskByID(task.id);\n\t\t\tconst employeeName = taskDetails.Employee\n\t\t\t\t? `${taskDetails.Employee.Fname} ${taskDetails.Employee.Lname}`\n\t\t\t\t: 'NA';\n\t\t\treturn employeeName;\n\t\t} catch (error) {\n\t\t\tconsole.error('Error fetching employee name:', error);\n\t\t\treturn 'NA';\n\t\t}\n\t}\n\n\tconst handleShowFormBtn = () => {\n\t\tsetDisplayForm(true);\n\t};\n\n\tconst handleCloseFormBtn = () => {\n\t\tsetDisplayForm(false);\n\t};\n\tconst navigate = useNavigate();\n\n\tconst handleViewBtn = (task) => {\n\t\tsetSelectedTask(task);\n\t\tconsole.log(task);\n\t\t// Route to the corresponding Task page\n\t\tnavigate(`/tasks/${task.id}`, { state: { task } });\n\t};\n\n\tconst handleAssigneeClick = (task) => {\n\t\t// Route to the corresponding Employee page\n\t};\n\n\tasync function handleDeleteBtn(id) {\n\t\tconst task = await fetchTaskByID(id);\n\t\tconsole.log('task', task);\n\t\tlet confirmMessage = ``;\n\t\t// Filter tasks with status 'not started'\n\t\tconst emplAssigned = '';\n\n\t\ttry {\n\t\t\tconfirmMessage = `${`Are you sure you want to delete ?`}`;\n\t\t\tif (window.confirm(confirmMessage)) {\n\t\t\t\tawait deleteTask(id);\n\t\t\t\tconst updatedTasks = tasks.filter((task) => task.id !== id);\n\t\t\t\tupdateTasks(updatedTasks);\n\n\t\t\t\t// onEmployeeUpdate(updatedEmployees);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error('Error deleting task:', error);\n\t\t}\n\t}\n\n\treturn (\n\t\t<Container fluid className='p-0'>\n\t\t\t<Row className='mb-5'>\n\t\t\t\t<Col>\n\t\t\t\t\t<Card className='table-card'>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col xs={8}>\n\t\t\t\t\t\t\t\t<h2 className='sans-serif tasks-heading p-4 m-0'>Tasks</h2>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t{showCreateNewTaskButton && (\n\t\t\t\t\t\t\t\t\t<Link to=''>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tvariant='dark'\n\t\t\t\t\t\t\t\t\t\t\tclassName='btn'\n\t\t\t\t\t\t\t\t\t\t\tonClick={handleShowFormBtn}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faPlus} className='create-icon' />\n\t\t\t\t\t\t\t\t\t\t\tCreate New Task\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t{!showCreateNewTaskButton && showViewTaskButton && (\n\t\t\t\t\t\t\t\t\t<Link to='/tasks'>\n\t\t\t\t\t\t\t\t\t\t<Button variant='dark' className='btn'>\n\t\t\t\t\t\t\t\t\t\t\tView All Tasks\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</Card>\n\n\t\t\t\t\t<Table borderless responsive style={{ textTransform: 'capitalize' }}>\n\t\t\t\t\t\t<thead className='sans-serif'>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th>Description</th>\n\t\t\t\t\t\t\t\t<th>Priority</th>\n\t\t\t\t\t\t\t\t<th>Status</th>\n\t\t\t\t\t\t\t\t<th>Assignee</th>\n\t\t\t\t\t\t\t\t{showActions && <th>Actions</th>}\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t{tasks.length === 0 || tasksByEmplCount < 1 ? (\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td colSpan='12'>\n\t\t\t\t\t\t\t\t\t\t<div className='empty-state'>\n\t\t\t\t\t\t\t\t\t\t\t<div className='mt-4 mb-4 empty-state-icon-wrap tick-icon'></div>\n\t\t\t\t\t\t\t\t\t\t\t<h3>You're on top of things!</h3>\n\t\t\t\t\t\t\t\t\t\t\t<p>No new tasks at the moment</p>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t(tasksByEmpl ? tasksByEmpl : tasks).map((task, index) => (\n\t\t\t\t\t\t\t\t\t<tr key={task.id}>\n\t\t\t\t\t\t\t\t\t\t<td>{task.description}</td>\n\t\t\t\t\t\t\t\t\t\t<td className='priority'>\n\t\t\t\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={`priority-dot priority-dot-${task.priority}`}\n\t\t\t\t\t\t\t\t\t\t\t></span>\n\t\t\t\t\t\t\t\t\t\t\t<span className={`priority-${task.priority}`}>\n\t\t\t\t\t\t\t\t\t\t\t\t{task.priority.charAt(0).toUpperCase() +\n\t\t\t\t\t\t\t\t\t\t\t\t\ttask.priority.slice(1)}\n\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t<td\n\t\t\t\t\t\t\t\t\t\t\tclassName={`td-status td-${\n\t\t\t\t\t\t\t\t\t\t\t\ttask.status === 'not started'\n\t\t\t\t\t\t\t\t\t\t\t\t\t? 'not-started'\n\t\t\t\t\t\t\t\t\t\t\t\t\t: task.status\n\t\t\t\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={`status-label status-label-${\n\t\t\t\t\t\t\t\t\t\t\t\t\ttask.status === 'not started'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t? 'not-started'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t: task.status\n\t\t\t\t\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t{task.status === 'not started' && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ticon={faCircle}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='status-icon'\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t{task.status === 'in-progress' && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ticon={faClock}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='status-icon'\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t{task.status === 'completed' && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ticon={faCheckCircle}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='status-icon'\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t{task.status.charAt(0).toUpperCase() +\n\t\t\t\t\t\t\t\t\t\t\t\t\ttask.status.slice(1)}\n\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t<td>{employeeNames[task.id]}</td>\n\t\t\t\t\t\t\t\t\t\t{/* <td>{employeeName ? employeeName : task.assignee}</td> */}\n\t\t\t\t\t\t\t\t\t\t{/* <td>{task.employeeId ? task.employeeId : 'NA'}</td> */}\n\n\t\t\t\t\t\t\t\t\t\t{showActions && (\n\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\tvariant='outline-dark'\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='action-btn'\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleViewBtn(task)}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faEye} />\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t{!hideDeleteButton && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvariant='outline-danger'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='action-btn'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleDeleteBtn(task.id)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faXmark} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{/* Display when the state is empty */}\n\t\t\t\t\t\t\t{/* <tr>\n\t\t\t\t\t\t\t\t<td colSpan='4'>\n\t\t\t\t\t\t\t\t\t<div className='empty-state'>\n\t\t\t\t\t\t\t\t\t\t<div className='mt-4 mb-4 empty-state-icon-wrap tick-icon'></div>\n\t\t\t\t\t\t\t\t\t\t<h3>You're on top of things!</h3>\n\t\t\t\t\t\t\t\t\t\t<p>No new tasks at the moment</p>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr> */}\n\t\t\t\t\t\t\t{}\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</Table>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t{displayForm && (\n\t\t\t\t<CreateTaskForm\n\t\t\t\t\tdisplayForm={displayForm}\n\t\t\t\t\thandleCloseFormBtn={handleCloseFormBtn}\n\t\t\t\t\ttasks={tasks}\n\t\t\t\t\tupdateTasks={updateTasks}\n\t\t\t\t/>\n\t\t\t)}\n\t\t\t{/* {selectedTask !== null && <TaskView task={selectedTask} />} */}\n\t\t</Container>\n\t);\n}\nexport default Tasks;\n","/Users/devanup/Website/Employee Management/Team-34-Front-End/t34-app/src/components/Employees/Employees.js",["155","156"],[],"import '../Tasks/tasks.css';\nimport { Row, Col, Card, Button, Table, Container } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEye } from '@fortawesome/free-regular-svg-icons';\nimport { faPlus, faXmark } from '@fortawesome/free-solid-svg-icons';\nimport { useState, useEffect, useContext } from 'react';\nimport { AddEmployee } from './AddEmployeeForm';\nimport { useNavigate } from 'react-router-dom';\nimport { fetchEmployees } from './fetchEmployees';\nimport { fetchEmployeeByID } from './fetchEmployeeByID';\nimport { deleteEmployee } from './deleteEmployee';\nimport EmployeeContext from './EmployeeContext';\n\nfunction Employees({ showAddEmployeeButton, onEmployeeUpdate }) {\n\tconst { employees, updateEmployees } = useContext(EmployeeContext);\n\tconst [displayForm, setDisplayForm] = useState(false);\n\tconst [selectedEmployee, setSelectedEmployee] = useState(null);\n\n\tuseEffect(() => {\n\t\t// Fetch employees when the component mounts\n\t\tfetchEmployeeData();\n\t}, []);\n\n\tasync function fetchEmployeeData() {\n\t\tconst data = await fetchEmployees();\n\t\tupdateEmployees(data);\n\t}\n\n\tconst handleShowFormBtn = () => {\n\t\tsetDisplayForm(true);\n\t};\n\n\tconst handleCloseFormBtn = () => {\n\t\tsetDisplayForm(false);\n\t};\n\n\tconst navigate = useNavigate();\n\n\tconst handleViewBtn = (employee) => {\n\t\tsetSelectedEmployee(employee);\n\t\t// Route to the corresponding Task page\n\t\tnavigate(`/employees/${employee.id}`, { state: { employee } });\n\t};\n\n\tasync function handleDeleteBtn(Fname, id) {\n\t\tconst employeeTasks = await fetchEmployeeByID(id);\n\t\tlet confirmMessage = ``;\n\t\t// Filter tasks with status 'not started'\n\t\tconst notStartedTasks = employeeTasks.Tasks.filter(\n\t\t\t(task) => task.status === 'not started',\n\t\t);\n\t\tconst taskText = notStartedTasks.length === 1 ? 'task' : 'tasks';\n\n\t\ttry {\n\t\t\tif (notStartedTasks.length > 0) {\n\t\t\t\tconfirmMessage = `${`Please note that ${Fname.split(' ')\n\t\t\t\t\t.map((word) => word.charAt(0).toLocaleUpperCase() + word.slice(1))\n\t\t\t\t\t.join(' ')} has ${\n\t\t\t\t\tnotStartedTasks.length\n\t\t\t\t} incomplete ${taskText}. The tasks must be assigned to another employee before deleting this employee.`}`;\n\t\t\t\tif (!window.confirm(confirmMessage)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconfirmMessage = `${`Are you sure you want to delete ${Fname.split(' ')\n\t\t\t\t\t.map((word) => word.charAt(0).toLocaleUpperCase() + word.slice(1))\n\t\t\t\t\t.join(' ')}?`}`;\n\t\t\t\tif (window.confirm(confirmMessage)) {\n\t\t\t\t\tawait deleteEmployee(id);\n\t\t\t\t\tconst updatedEmployees = employees.filter(\n\t\t\t\t\t\t(employee) => employee.id !== id,\n\t\t\t\t\t);\n\t\t\t\t\tupdateEmployees(updatedEmployees);\n\n\t\t\t\t\tonEmployeeUpdate(updatedEmployees);\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error('Error deleting employee:', error);\n\t\t}\n\t}\n\treturn (\n\t\t<Container fluid className='p-0'>\n\t\t\t<Row className='mb-5'>\n\t\t\t\t<Col className=''>\n\t\t\t\t\t<Card className='table-card'>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col xs={8}>\n\t\t\t\t\t\t\t\t<h2 className='sans-serif p-4 m-0'>Employees</h2>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t{showAddEmployeeButton && (\n\t\t\t\t\t\t\t\t\t<Link to=''>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tvariant='dark'\n\t\t\t\t\t\t\t\t\t\t\tclassName='btn'\n\t\t\t\t\t\t\t\t\t\t\tonClick={handleShowFormBtn}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faPlus} className='create-icon' />\n\t\t\t\t\t\t\t\t\t\t\tAdd New Employee\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t{!showAddEmployeeButton && (\n\t\t\t\t\t\t\t\t\t<Link to='/employees'>\n\t\t\t\t\t\t\t\t\t\t<Button variant='dark' className='btn'>\n\t\t\t\t\t\t\t\t\t\t\tView All Employees\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</Card>\n\t\t\t\t\t<Table borderless responsive style={{ textTransform: 'capitalize' }}>\n\t\t\t\t\t\t<thead className='sans-serif'>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th>Name</th>\n\t\t\t\t\t\t\t\t<th>Department</th>\n\t\t\t\t\t\t\t\t{/* <th>Tasks Assigned</th>\n\t\t\t\t\t\t\t\t<th>Tasks Completed</th> */}\n\t\t\t\t\t\t\t\t{showAddEmployeeButton && <th>Actions</th>}\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t{employees.length === 0 ? (\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td colSpan='4'>\n\t\t\t\t\t\t\t\t\t\t<div className='empty-state'>\n\t\t\t\t\t\t\t\t\t\t\t<div className='mt-4 mb-4 empty-state-icon-wrap add-people-icon'></div>\n\t\t\t\t\t\t\t\t\t\t\t<h3>You're all by yourself</h3>\n\t\t\t\t\t\t\t\t\t\t\t<p>Add a new employee to get things moving</p>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\temployees.map((employee, index) => (\n\t\t\t\t\t\t\t\t\t<tr key={index}>\n\t\t\t\t\t\t\t\t\t\t<td>{`${employee.Fname + ' ' + employee.Lname}`}</td>\n\t\t\t\t\t\t\t\t\t\t<td className='department'>{employee.department}</td>\n\t\t\t\t\t\t\t\t\t\t{/* <td className='task-assigned-count'>\n\t\t\t\t\t\t\t\t\t\t\t{employee.taskAssigned}\n\t\t\t\t\t\t\t\t\t\t</td> */}\n\t\t\t\t\t\t\t\t\t\t{/* <td>{employee.taskCompleted}</td> */}\n\t\t\t\t\t\t\t\t\t\t{showAddEmployeeButton && (\n\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\tvariant='outline-dark'\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='action-btn'\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleViewBtn(employee)}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faEye} />\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\tvariant='outline-danger'\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='action-btn'\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleDeleteBtn(employee.Fname, employee.id)\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faXmark} />\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</Table>\n\t\t\t\t\t{/* the div below was added to leave a space at the bottom of the in the Homepage */}\n\t\t\t\t\t<div className='mb-5'></div>{' '}\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t{displayForm && (\n\t\t\t\t<AddEmployee\n\t\t\t\t\thandleShowFormBtn={handleShowFormBtn}\n\t\t\t\t\thandleCloseFormBtn={handleCloseFormBtn}\n\t\t\t\t\temployees={employees}\n\t\t\t\t\tupdateEmployees={updateEmployees}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</Container>\n\t);\n}\n\nexport default Employees;\n","/Users/devanup/Website/Employee Management/Team-34-Front-End/t34-app/src/pages/EmployeesPage.js",["157","158","159","160","161","162","163","164"],[],"import { Card, Col, Container, Row } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n\tfaClipboardList,\n\tfaCheckCircle,\n\tfaPeopleGroup,\n\tfaMagnifyingGlass,\n} from '@fortawesome/free-solid-svg-icons';\nimport Employees from '../components/Employees/Employees';\nimport { Helmet } from 'react-helmet';\nimport { fetchEmployees } from '../components/Employees/fetchEmployees';\nimport { AddEmployee } from '../components/Employees/AddEmployeeForm';\n\nimport { EmployeeProvider } from '../components/Employees/EmployeeContext';\n\nexport const EmployeesPage = () => {\n\treturn (\n\t\t<div>\n\t\t\t<Helmet>\n\t\t\t\t<title>Employees</title>\n\t\t\t</Helmet>\n\t\t\t<Card className='overview p-0 mb-4'>\n\t\t\t\t<Card.Body className='p-0'>\n\t\t\t\t\t<Container fluid className='p-0'>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t{/* <Col md={8}>\n\t\t\t\t\t\t\t\t<h2 className='sans-serif mt-2'>Employees Overview</h2>\n\t\t\t\t\t\t\t</Col> */}\n\t\t\t\t\t\t\t{/* <Col md>\n\t\t\t\t\t\t\t\t<div className='search-wrap'>\n\t\t\t\t\t\t\t\t\t<div className='search-icon-wrap'>\n\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon\n\t\t\t\t\t\t\t\t\t\t\tclassName='search-icon'\n\t\t\t\t\t\t\t\t\t\t\ticon={faMagnifyingGlass}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\t\tplaceholder='Search employee'\n\t\t\t\t\t\t\t\t\t\tclassName='search-input'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Col> */}\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t{/* <Row className='text-center mt-5'>\n\t\t\t\t\t\t\t<Col md>\n\t\t\t\t\t\t\t\t<Card className='card task-card p-3 mb-4'>\n\t\t\t\t\t\t\t\t\t<div className='icon mt-3 mb-3'>\n\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faClipboardList} />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<h5 className='sans-serif'>Employees</h5>\n\t\t\t\t\t\t\t\t\t<h6 className='mb-2 card-count-display'>{numEmployees}</h6>\n\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t<Col md>\n\t\t\t\t\t\t\t\t<Card className='card completed-card p-3 mb-4'>\n\t\t\t\t\t\t\t\t\t<div className='icon mt-3 mb-3'>\n\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faPeopleGroup} />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<h5 className='sans-serif'>Tasks Assigned</h5>\n\t\t\t\t\t\t\t\t\t<h6 className='mb-2 card-count-display'>{numTasks}</h6>\n\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t<Col md>\n\t\t\t\t\t\t\t\t<Card className='card employees-card p-3 mb-4'>\n\t\t\t\t\t\t\t\t\t<div className='icon mt-3 mb-3'>\n\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faCheckCircle} />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<h5 className='sans-serif'>Tasks Completed</h5>\n\t\t\t\t\t\t\t\t\t<h6 className='mb-2 card-count-display'>\n\t\t\t\t\t\t\t\t\t\t{numCompletedTasks}\n\t\t\t\t\t\t\t\t\t</h6>\n\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row> */}\n\t\t\t\t\t</Container>\n\t\t\t\t</Card.Body>\n\t\t\t</Card>\n\t\t\t<EmployeeProvider>\n\t\t\t\t<Employees showAddEmployeeButton={true} />\n\t\t\t</EmployeeProvider>\n\t\t</div>\n\t);\n};\n","/Users/devanup/Website/Employee Management/Team-34-Front-End/t34-app/src/pages/Dashboard.js",[],[],"/Users/devanup/Website/Employee Management/Team-34-Front-End/t34-app/src/pages/TasksPage.js",["165","166","167","168","169","170","171","172"],[],"import Tasks from '../components/Tasks/Tasks';\nimport { Card, Col, Container, Row } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n\tfaClipboardList,\n\tfaClock,\n\tfaCheckCircle,\n\tfaRectangleList,\n\tfaMagnifyingGlass,\n} from '@fortawesome/free-solid-svg-icons';\nimport { faCircle } from '@fortawesome/free-regular-svg-icons';\nimport { Helmet } from 'react-helmet';\nimport { TaskProvider } from '../components/Tasks/TaskContext';\n\nexport const TasksPage = () => {\n\treturn (\n\t\t<div>\n\t\t\t<Helmet>\n\t\t\t\t<title>Tasks</title>\n\t\t\t</Helmet>\n\t\t\t<Card className='overview p-0 mb-4'>\n\t\t\t\t<Card.Body className='p-0'>\n\t\t\t\t\t<Container fluid className='p-0'>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t{/* <Col md={8}>\n\t\t\t\t\t\t\t\t<h2 className='sans-serif mt-2'>Tasks Overview</h2>\n\t\t\t\t\t\t\t</Col> */}\n\t\t\t\t\t\t\t{/* <Col md>\n\t\t\t\t\t\t\t\t<div className='search-wrap'>\n\t\t\t\t\t\t\t\t\t<div className='search-icon-wrap'>\n\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon\n\t\t\t\t\t\t\t\t\t\t\tclassName='search-icon'\n\t\t\t\t\t\t\t\t\t\t\ticon={faMagnifyingGlass}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\t\tplaceholder='Search Task'\n\t\t\t\t\t\t\t\t\t\tclassName='search-input'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Col> */}\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t{/* <Row className='text-center mt-5'>\n\t\t\t\t\t\t\t<Col md={3}>\n\t\t\t\t\t\t\t\t<Card className='card task-card p-3 mb-4'>\n\t\t\t\t\t\t\t\t\t<div className='icon mt-3 mb-3'>\n\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faClipboardList} />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<h5 className='sans-serif'>Tasks</h5>\n\t\t\t\t\t\t\t\t\t<h6 className='mb-2 card-count-display'>3</h6>\n\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t<Col md={3}>\n\t\t\t\t\t\t\t\t<Card className='card completed-card p-3 mb-4'>\n\t\t\t\t\t\t\t\t\t<div className='icon mt-3 mb-3'>\n\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faCheckCircle} />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<h5 className='sans-serif'>Completed</h5>\n\t\t\t\t\t\t\t\t\t<h6 className='mb-2 card-count-display'>1</h6>\n\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t<Col md={3}>\n\t\t\t\t\t\t\t\t<Card className='card employees-card p-3 mb-4'>\n\t\t\t\t\t\t\t\t\t<div className='icon mt-3 mb-3'>\n\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faClock} />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<h5 className='sans-serif'>In Progress</h5>\n\t\t\t\t\t\t\t\t\t<h6 className='mb-2 card-count-display'>1</h6>\n\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t<Col md={3}>\n\t\t\t\t\t\t\t\t<Card className='card employees-card p-3 mb-4'>\n\t\t\t\t\t\t\t\t\t<div className='icon mt-3 mb-3'>\n\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faCircle} />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<h5 className='sans-serif'>Not Started</h5>\n\t\t\t\t\t\t\t\t\t<h6 className='mb-2 card-count-display'>1</h6>\n\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row> */}\n\t\t\t\t\t</Container>\n\t\t\t\t</Card.Body>\n\t\t\t</Card>\n\t\t\t<TaskProvider>\n\t\t\t\t<Tasks showActions={true} showCreateNewTaskButton={true} />\n\t\t\t</TaskProvider>\n\t\t</div>\n\t);\n};\n","/Users/devanup/Website/Employee Management/Team-34-Front-End/t34-app/src/pages/TaskPage.js",["173","174","175","176","177"],[],"import './TaskPage.css';\nimport { Card, Button, Col, Container, Row } from 'react-bootstrap';\nimport { useLocation } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n\tfaCircle,\n\tfaClock,\n\tfaCheckCircle,\n\tfaTrashCan,\n} from '@fortawesome/free-regular-svg-icons';\nimport { faPen, faFloppyDisk } from '@fortawesome/free-solid-svg-icons';\nimport { useState, useEffect } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport { Helmet } from 'react-helmet';\nimport { fetchTaskByID } from '../components/Tasks/fetchTaskByID';\n\nconst priorityList = [\n\t{ value: 'Low', label: 'Low' },\n\t{ value: 'Medium', label: 'Medium' },\n\t{ value: 'High', label: 'High' },\n];\nconst statusList = [\n\t{ value: 'Not-Started', label: 'Not-Started' },\n\t// { value: 'In-Progress', label: 'In-Progress' },\n\t{ value: 'Completed', label: 'Completed' },\n];\nconst assigneeList = [\n\t{ value: 'Mark Davidson', label: 'Mark Davidson' },\n\t{ value: 'Laura Huff', label: 'Laura Huff' },\n\t{ value: 'Christian Wu', label: 'Christian Wu' },\n\t{ value: 'Jason Smith', label: 'Jason Smith' },\n\t{ value: 'Kayla Davis', label: 'Kayla Davis' },\n\t{ value: 'Andrew Chen', label: 'Andrew Chen' },\n];\n\nexport const TaskPage = () => {\n\tconst { state } = useLocation();\n\tconst task = state?.task;\n\t// const employeeState = state?.employee;\n\tconst [tasksByEmployee, setTasksByEmployee] = useState([]);\n\tconst employeeName = tasksByEmployee?.Fname + ' ' + tasksByEmployee?.Lname;\n\tconst [editEnable, setEditEnable] = useState(false);\n\tconst handleEdit = () => {\n\t\tsetEditEnable(true);\n\t};\n\tconst [selectedTask, setSelectedTask] = useState(task);\n\n\tconst handleCancel = () => {\n\t\tsetEditEnable(false);\n\t\tsetSelectedTask(task);\n\t};\n\tconst handleSave = () => {\n\t\tsetEditEnable(false);\n\t\ttask.description = selectedTask.description;\n\t\ttask.priority = selectedTask.priority;\n\t\ttask.status = selectedTask.status;\n\t\ttask.assignee = selectedTask.assignee;\n\t};\n\tconst handleDescriptionChange = (e) => {\n\t\tconst newTask = { ...selectedTask, description: e.target.value };\n\t\tsetSelectedTask(newTask);\n\t};\n\tconst handlePriorityChange = (e) => {\n\t\tconst newTask = { ...selectedTask, priority: e.target.value };\n\t\tsetSelectedTask(newTask);\n\t};\n\tconst handleStatusChange = (e) => {\n\t\tconst newTask = { ...selectedTask, status: e.target.value };\n\t\tsetSelectedTask(newTask);\n\t\t// console.log('task.status: ', task.status);\n\t\t// console.log('newTask.status: ', newTask.status);\n\t\t// console.log('task: ', task);\n\t\t// console.log('newTask: ', newTask);\n\t};\n\tconst handleAssigneeChange = (e) => {\n\t\tconst newTask = { ...selectedTask, assignee: e.target.value };\n\t\tsetSelectedTask(newTask);\n\t\t// console.log('task.status: ', task.status);\n\t\t// console.log('newTask.status: ', newTask.status);\n\t\t// console.log('task: ', task);\n\t\t// console.log('newTask: ', newTask);\n\t};\n\tuseEffect(() => {\n\t\tfetchTaskData();\n\t}, [task]);\n\n\tasync function fetchTaskData() {\n\t\tconst tasks = await fetchTaskEmployee(task.id);\n\t\tsetTasksByEmployee(tasks);\n\t\tconsole.log('TASKS BY EMPLOYEE: ', tasks);\n\t}\n\tasync function fetchTaskEmployee(id) {\n\t\ttry {\n\t\t\tconst task = await fetchTaskByID(id);\n\t\t\treturn task.Employee;\n\t\t} catch (error) {\n\t\t\tconsole.error(`Error fetching employee for task with ID ${id}:`, error);\n\t\t\treturn [];\n\t\t}\n\t}\n\treturn (\n\t\t<div>\n\t\t\t<Helmet>\n\t\t\t\t<title>Task Detail</title>\n\t\t\t</Helmet>\n\t\t\t<Card className='card-wrap p-5'>\n\t\t\t\t{/* <div className='empty-state'>\n\t\t\t\t\t<h3>Task not found</h3>\n\t\t\t\t</div> */}\n\t\t\t\t<Container fluid className='p-0'>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col lg={9}>\n\t\t\t\t\t\t\t<h2 className='sans-serif mt-2 mb-5'>Task Detail</h2>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col md={3} className='mb-3'>\n\t\t\t\t\t\t\t<div className='edit-btn'>\n\t\t\t\t\t\t\t\t{!editEnable && (\n\t\t\t\t\t\t\t\t\t<Button variant='outline-dark' onClick={handleEdit}>\n\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faPen} />\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md={12}>\n\t\t\t\t\t\t\t{editEnable && (\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tclassName='mt-0 mb-3 input edit-input'\n\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\tvalue={selectedTask.description}\n\t\t\t\t\t\t\t\t\tonChange={handleDescriptionChange}\n\t\t\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{!editEnable && (\n\t\t\t\t\t\t\t\t<div className='mb-3 name-description'>\n\t\t\t\t\t\t\t\t\t{/* <h4 className='m-0'>{task.description}</h4> */}\n\t\t\t\t\t\t\t\t\t<h4 className='m-0 p-0'>{task.description}</h4>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\n\t\t\t\t\t<Row style={{ textTransform: 'capitalize' }}>\n\t\t\t\t\t\t<Col lg={12} className='mb-4'>\n\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t\t</Col>\n\n\t\t\t\t\t\t<Col md={3} className='mb-4'>\n\t\t\t\t\t\t\t<div className='properties property-title'>Priority</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col md={9} className='mb-4'>\n\t\t\t\t\t\t\t{!editEnable && task.priority}\n\t\t\t\t\t\t\t{editEnable && (\n\t\t\t\t\t\t\t\t<Form.Select\n\t\t\t\t\t\t\t\t\taria-label='Default select example'\n\t\t\t\t\t\t\t\t\tclassName='assignee-select'\n\t\t\t\t\t\t\t\t\tstyle={{ textTransform: 'capitalize' }}\n\t\t\t\t\t\t\t\t\tonChange={handlePriorityChange}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<option selected disabled>\n\t\t\t\t\t\t\t\t\t\t{task?.priority}\n\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t{priorityList.map((_priority) => (\n\t\t\t\t\t\t\t\t\t\t<option key={_priority.value} value={_priority.value}>\n\t\t\t\t\t\t\t\t\t\t\t{_priority.label}\n\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</Form.Select>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Col>\n\n\t\t\t\t\t\t<Col md={3} className='mb-4'>\n\t\t\t\t\t\t\t<div className='properties property-title'>Status</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col md={9} className={`mb-4`}>\n\t\t\t\t\t\t\t<div className='properties'>\n\t\t\t\t\t\t\t\t{!editEnable && task.status}\n\t\t\t\t\t\t\t\t{editEnable && (\n\t\t\t\t\t\t\t\t\t<Form.Select\n\t\t\t\t\t\t\t\t\t\taria-label='Default select example'\n\t\t\t\t\t\t\t\t\t\tclassName='assignee-select'\n\t\t\t\t\t\t\t\t\t\tstyle={{ textTransform: 'capitalize' }}\n\t\t\t\t\t\t\t\t\t\tonChange={handleStatusChange}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<option selected disabled>\n\t\t\t\t\t\t\t\t\t\t\t{task?.status}\n\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t\t{statusList.map((_status) => (\n\t\t\t\t\t\t\t\t\t\t\t<option key={_status.value} value={_status.value}>\n\t\t\t\t\t\t\t\t\t\t\t\t{_status.label}\n\t\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</Form.Select>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\n\t\t\t\t\t\t<Col md={3} className='mb-4'>\n\t\t\t\t\t\t\t<div className='properties property-title'>Assignee</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col md={9} className='mb-4'>\n\t\t\t\t\t\t\t<div className='properties assignee-property'>\n\t\t\t\t\t\t\t\t{!editEnable && (employeeName ? employeeName : 'Unassigned')}\n\t\t\t\t\t\t\t\t{editEnable && (\n\t\t\t\t\t\t\t\t\t<Form.Select\n\t\t\t\t\t\t\t\t\t\taria-label='Default select example'\n\t\t\t\t\t\t\t\t\t\tclassName='assignee-select'\n\t\t\t\t\t\t\t\t\t\tstyle={{ textTransform: 'capitalize' }}\n\t\t\t\t\t\t\t\t\t\tonChange={handleAssigneeChange}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<option selected disabled>\n\t\t\t\t\t\t\t\t\t\t\t{employeeName ? employeeName : 'Unassigned'}\n\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t\t{assigneeList.map((_assignee) => (\n\t\t\t\t\t\t\t\t\t\t\t<option key={_assignee.value} value={_assignee.value}>\n\t\t\t\t\t\t\t\t\t\t\t\t{_assignee.label}\n\t\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</Form.Select>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t{editEnable && (\n\t\t\t\t\t\t\t<Col md={12} className='mt-4 mb-4'>\n\t\t\t\t\t\t\t\t<Button variant='secondary'>\n\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faTrashCan} className='remove-btn' />\n\t\t\t\t\t\t\t\t\tRemove\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t<div className='edit-btn'>\n\t\t\t\t\t\t\t\t\t{!editEnable && (\n\t\t\t\t\t\t\t\t\t\t<Button variant='outline-dark' onClick={handleEdit}>\n\t\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faPen} />\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t{editEnable && (\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tclassName='edit-enabled-btn'\n\t\t\t\t\t\t\t\t\t\t\tvariant='dark'\n\t\t\t\t\t\t\t\t\t\t\tonClick={handleSave}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{/* <FontAwesomeIcon icon={faFloppyDisk} /> */}\n\t\t\t\t\t\t\t\t\t\t\tSave\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t{editEnable && (\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tclassName='edit-enabled-btn'\n\t\t\t\t\t\t\t\t\t\t\tvariant='outline-secondary'\n\t\t\t\t\t\t\t\t\t\t\tonClick={handleCancel}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>\n\t\t\t</Card>\n\t\t</div>\n\t);\n};\n","/Users/devanup/Website/Employee Management/Team-34-Front-End/t34-app/src/pages/EmployeePage.js",["178","179"],[],"import './TaskPage.css';\nimport { Card, Button, Col, Container, Row } from 'react-bootstrap';\nimport { useLocation } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPen } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashCan } from '@fortawesome/free-regular-svg-icons';\nimport { useState, useEffect, useContext } from 'react';\nimport Tasks from '../components/Tasks/Tasks';\nimport Form from 'react-bootstrap/Form';\nimport { Helmet } from 'react-helmet';\nimport { updateEmployee } from '../components/Employees/updateEmployee';\nimport { fetchEmployeeByID } from '../components/Employees/fetchEmployeeByID';\nimport { deleteEmployee } from '../components/Employees/deleteEmployee';\nimport { useNavigate } from 'react-router-dom';\nimport { TaskProvider } from '../components/Tasks/TaskContext';\n\nconst departmentList = [\n\t{ value: 'Marketing & Sales', label: 'Marketing & Sales' },\n\t{ value: 'Design', label: 'Design' },\n\t{ value: 'Engineering', label: 'Engineering' },\n\t{ value: 'Finance', label: 'Finance' },\n\t{ value: 'Legal', label: 'Legal' },\n\t{ value: 'HR', label: 'HR' },\n];\nexport const EmployeePage = () => {\n\tconst { state } = useLocation();\n\tconst employee = state?.employee;\n\tconst employeeName = employee.Fname + ' ' + employee.Lname;\n\tconst [editEnable, setEditEnable] = useState(false);\n\tconst [tasksByEmpl, setTasksByEmpl] = useState([]);\n\tconst [selectedEmployee, setSelectedEmployee] = useState(employee);\n\n\tconst handleEdit = () => {\n\t\tsetEditEnable(true);\n\t};\n\n\tconst handleCancel = () => {\n\t\tsetEditEnable(false);\n\t\tsetSelectedEmployee(employee);\n\t};\n\tasync function handleSave() {\n\t\tsetEditEnable(false);\n\t\ttry {\n\t\t\tconst updatedEmployee = await updateEmployee(selectedEmployee.id, {\n\t\t\t\tFname: selectedEmployee.Fname,\n\t\t\t\tLname: selectedEmployee.Lname,\n\t\t\t\tdepartment: selectedEmployee.department,\n\t\t\t});\n\t\t\tsetSelectedEmployee(updatedEmployee);\n\t\t\tconsole.log('Employee updated successfully!');\n\t\t} catch (error) {\n\t\t\t// Handle error\n\t\t\tconsole.error('Error deleting employee:', error);\n\t\t}\n\t}\n\tconst handleFirstNameChange = (e) => {\n\t\tconst newEmployee = { ...selectedEmployee, Fname: e.target.value };\n\t\tsetSelectedEmployee(newEmployee);\n\t};\n\tconst handleLastNameChange = (e) => {\n\t\tconst newEmployee = { ...selectedEmployee, Lname: e.target.value };\n\t\tsetSelectedEmployee(newEmployee);\n\t};\n\tconst handleDepartmentChange = (e) => {\n\t\tconst newEmployee = { ...selectedEmployee, department: e.target.value };\n\t\tsetSelectedEmployee(newEmployee);\n\t};\n\tuseEffect(() => {\n\t\tfetchEmployeeData();\n\t\tsetSelectedEmployee(employee);\n\t}, [employee]);\n\n\tconst navigate = useNavigate();\n\n\tasync function handleDeleteBtn(id) {\n\t\t// Display a confirmation dialog\n\t\tconst confirmDelete = window.confirm(\n\t\t\t'Are you sure you want to delete this employee?',\n\t\t);\n\n\t\tif (confirmDelete) {\n\t\t\ttry {\n\t\t\t\tawait deleteEmployee(id);\n\t\t\t\t// Redirect to the employee list or perform any other necessary action\n\t\t\t\tnavigate('/employees');\n\t\t\t} catch (error) {\n\t\t\t\t// Handle error\n\t\t\t\tconsole.error('Error deleting employee:', error);\n\t\t\t}\n\t\t}\n\t}\n\n\tasync function fetchEmployeeData() {\n\t\tconst tasks = await fetchEmployeeTasks(employee.id);\n\t\tsetTasksByEmpl(tasks);\n\t}\n\tasync function fetchEmployeeTasks(id) {\n\t\ttry {\n\t\t\tconst employee = await fetchEmployeeByID(id);\n\t\t\treturn employee.Tasks;\n\t\t} catch (error) {\n\t\t\tconsole.error(`Error fetching tasks for employee with ID ${id}:`, error);\n\t\t\treturn [];\n\t\t}\n\t}\n\tconst completedTasksCount = tasksByEmpl.reduce(\n\t\t(count, task) => (task.status === 'completed' ? count + 1 : count),\n\t\t0,\n\t);\n\n\treturn (\n\t\t<div>\n\t\t\t<Helmet>\n\t\t\t\t<title>\n\t\t\t\t\t{employeeName\n\t\t\t\t\t\t? employeeName\n\t\t\t\t\t\t\t\t.split(' ')\n\t\t\t\t\t\t\t\t.map(\n\t\t\t\t\t\t\t\t\t(word) => word.charAt(0).toLocaleUpperCase() + word.slice(1),\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t.join(' ')\n\t\t\t\t\t\t: 'Employee Detail'}\n\t\t\t\t</title>\n\t\t\t</Helmet>\n\t\t\t<Card className='card-wrap p-5'>\n\t\t\t\t{/* <div className='empty-state'>\n\t\t\t\t\t<h3>Employee not found</h3>\n\t\t\t\t</div> */}\n\t\t\t\t<Container fluid className='p-0'>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col lg={9}>\n\t\t\t\t\t\t\t<h2 className='sans-serif mt-2 mb-5'>Employee Detail</h2>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col md={3} className='mb-3'>\n\t\t\t\t\t\t\t<div className='edit-btn'>\n\t\t\t\t\t\t\t\t{!editEnable && (\n\t\t\t\t\t\t\t\t\t<Button variant='outline-dark' onClick={handleEdit}>\n\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faPen} />\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t{editEnable && (\n\t\t\t\t\t\t<Row className='mb-4'>\n\t\t\t\t\t\t\t<Col md={6}>\n\t\t\t\t\t\t\t\t<label className=' mb-1'>\n\t\t\t\t\t\t\t\t\t<h5>First Name</h5>\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\tid='firstName'\n\t\t\t\t\t\t\t\t\tvalue={selectedEmployee.Fname}\n\t\t\t\t\t\t\t\t\tclassName='form-input firstName'\n\t\t\t\t\t\t\t\t\tonChange={handleFirstNameChange}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t<Col md={6}>\n\t\t\t\t\t\t\t\t<label className=' mb-1'>\n\t\t\t\t\t\t\t\t\t<h5>Last Name</h5>\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\tid='lastName'\n\t\t\t\t\t\t\t\t\tvalue={selectedEmployee.Lname}\n\t\t\t\t\t\t\t\t\tclassName='form-input lastName'\n\t\t\t\t\t\t\t\t\tonChange={handleLastNameChange}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t)}\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t{!editEnable && (\n\t\t\t\t\t\t\t\t<div className='mb-3 name-description'>\n\t\t\t\t\t\t\t\t\t<h4 className='m-0 p-0'>\n\t\t\t\t\t\t\t\t\t\t{(selectedEmployee.Fname + ' ' + selectedEmployee.Lname)\n\t\t\t\t\t\t\t\t\t\t\t.split(' ')\n\t\t\t\t\t\t\t\t\t\t\t.map(\n\t\t\t\t\t\t\t\t\t\t\t\t(word) =>\n\t\t\t\t\t\t\t\t\t\t\t\t\tword.charAt(0).toLocaleUpperCase() + word.slice(1),\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t.join(' ')}\n\t\t\t\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\n\t\t\t\t\t<Row style={{ textTransform: 'capitalize' }}>\n\t\t\t\t\t\t<Col lg={12} className='mb-4'>\n\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t\t</Col>\n\n\t\t\t\t\t\t<Col md={3} className='mb-4'>\n\t\t\t\t\t\t\t<div className='properties property-title'>Department</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col md={9} className='mb-4'>\n\t\t\t\t\t\t\t<div className='properties'>\n\t\t\t\t\t\t\t\t{/* {!editEnable && <span className=''>{employee.department}</span>}\n\t\t\t\t\t\t\t\t{editEnable && (\n\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\t\t\tvalue={employee.department}\n\t\t\t\t\t\t\t\t\t\t\tclassName='department-input'\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t)} */}\n\t\t\t\t\t\t\t\t{!editEnable && selectedEmployee.department}\n\t\t\t\t\t\t\t\t{editEnable && (\n\t\t\t\t\t\t\t\t\t<Form.Select\n\t\t\t\t\t\t\t\t\t\taria-label='Default select example'\n\t\t\t\t\t\t\t\t\t\tclassName='assignee-select'\n\t\t\t\t\t\t\t\t\t\tstyle={{ textTransform: 'capitalize' }}\n\t\t\t\t\t\t\t\t\t\tonChange={handleDepartmentChange}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<option selected disabled>\n\t\t\t\t\t\t\t\t\t\t\t{selectedEmployee?.department}\n\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t\t{departmentList.map((_department) => (\n\t\t\t\t\t\t\t\t\t\t\t<option key={_department.value} value={_department.value}>\n\t\t\t\t\t\t\t\t\t\t\t\t{_department.label}\n\t\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</Form.Select>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\n\t\t\t\t\t\t<Col md={3} className='mb-4'>\n\t\t\t\t\t\t\t<div className='properties property-title'>\n\t\t\t\t\t\t\t\t{tasksByEmpl.length > 1 ? 'Tasks' : 'Task'} Assigned\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col md={9} className='mb-4'>\n\t\t\t\t\t\t\t<div className='properties'>\n\t\t\t\t\t\t\t\t{/* {console.log('nonEmptyTasks', nonEmptyTasks)} */}\n\t\t\t\t\t\t\t\t<span className=''>{tasksByEmpl.length}</span>\n\t\t\t\t\t\t\t\t{/* {editEnable && (\n\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t<input type='text' value={employee.taskAssigned} />\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t)} */}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\n\t\t\t\t\t\t<Col md={3} className='mb-4'>\n\t\t\t\t\t\t\t<div className='properties property-title'>\n\t\t\t\t\t\t\t\t{tasksByEmpl.length > 1 ? 'Tasks' : 'Task'} Completed\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col md={9} className='mb-4'>\n\t\t\t\t\t\t\t<div className='properties'>\n\t\t\t\t\t\t\t\t<span className=''>{completedTasksCount}</span>\n\t\t\t\t\t\t\t\t{/* {editEnable && (\n\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t<input type='text' value={employee.taskCompleted} />\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t)} */}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\n\t\t\t\t\t\t{/* view employee specific Tasks here */}\n\t\t\t\t\t\t<Col md={12} className='mt-4'>\n\t\t\t\t\t\t\t<div className='properties'>\n\t\t\t\t\t\t\t\t<TaskProvider>\n\t\t\t\t\t\t\t\t\t<Tasks\n\t\t\t\t\t\t\t\t\t\tshowActions={true}\n\t\t\t\t\t\t\t\t\t\tshowViewTaskButton={false}\n\t\t\t\t\t\t\t\t\t\thideDeleteButton={true}\n\t\t\t\t\t\t\t\t\t\ttasksByEmpl={tasksByEmpl}\n\t\t\t\t\t\t\t\t\t\ttasksByEmplCount={tasksByEmpl.length}\n\t\t\t\t\t\t\t\t\t\temployeeName={employeeName}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</TaskProvider>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t{editEnable && (\n\t\t\t\t\t\t\t<Col md={12} className='mb-2'>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tvariant='secondary'\n\t\t\t\t\t\t\t\t\tonClick={() => handleDeleteBtn(selectedEmployee.id)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faTrashCan} className='remove-btn' />\n\t\t\t\t\t\t\t\t\tRemove\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t<div className='edit-btn'>\n\t\t\t\t\t\t\t\t\t{editEnable && (\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tclassName='edit-enabled-btn'\n\t\t\t\t\t\t\t\t\t\t\tvariant='dark'\n\t\t\t\t\t\t\t\t\t\t\tonClick={handleSave}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{/* <FontAwesomeIcon icon={faFloppyDisk} /> */}\n\t\t\t\t\t\t\t\t\t\t\tSave\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t{editEnable && (\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tclassName='edit-enabled-btn'\n\t\t\t\t\t\t\t\t\t\t\tvariant='outline-secondary'\n\t\t\t\t\t\t\t\t\t\t\tonClick={handleCancel}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>\n\t\t\t</Card>\n\t\t</div>\n\t);\n};\n","/Users/devanup/Website/Employee Management/Team-34-Front-End/t34-app/src/components/Employees/AddEmployeeForm.js",["180"],[],"import './AddEmployeeForm.css';\nimport { Button, Col, Container, Row } from 'react-bootstrap';\nimport { useState, useEffect } from 'react';\nimport { createEmployee } from './createEmployee';\n\nexport const AddEmployee = ({\n\thandleCloseFormBtn,\n\temployees,\n\tupdateEmployees,\n}) => {\n\tconst [formSuccess, setFormSuccess] = useState(false);\n\tconst handleCancelBtn = () => {\n\t\thandleCloseFormBtn();\n\t};\n\n\tconst handleKeyDown = (e) => {\n\t\tif (e.key === 'Escape') {\n\t\t\thandleCancelBtn();\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tdocument.addEventListener('keydown', handleKeyDown);\n\n\t\treturn () => {\n\t\t\tdocument.removeEventListener('keydown', handleKeyDown);\n\t\t};\n\t}, []);\n\n\tconst handleSubmit = async (event) => {\n\t\tevent.preventDefault();\n\t\tconst formData = new FormData(event.target);\n\t\tconst employeeData = Object.fromEntries(formData.entries());\n\n\t\tconst newEmployee = await createEmployee(employeeData);\n\n\t\tif (newEmployee) {\n\t\t\t// console.log('New employee added:', newEmployee);\n\t\t\tsetFormSuccess(true);\n\t\t\tconst updatedEmployees = [...employees, newEmployee];\n\t\t\tupdateEmployees(updatedEmployees);\n\t\t\thandleShowFormBtn();\n\t\t\thandleCloseFormBtn();\n\t\t} else {\n\t\t\tconsole.error('Failed to add employee');\n\t\t}\n\t};\n\n\tconst handleShowFormBtn = () => {\n\t\tsetFormSuccess(false);\n\t};\n\n\treturn (\n\t\t<div className='form-flex-wrap'>\n\t\t\t{!formSuccess && (\n\t\t\t\t<div className='form-overlay' onClick={handleCancelBtn}></div>\n\t\t\t)}\n\t\t\t{!formSuccess && (\n\t\t\t\t<div className='form-wrap add-employee-form-wrap'>\n\t\t\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t\t\t<h1 className='mb-4 p-0'>Add Employee</h1>\n\t\t\t\t\t\t<Container fluid className='p-0'>\n\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t<label className='mt-4 mb-1'>\n\t\t\t\t\t\t\t\t\t<h5>Full Name</h5>\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\t\tid='firstName'\n\t\t\t\t\t\t\t\t\t\tname='Fname'\n\t\t\t\t\t\t\t\t\t\tplaceholder='First Name'\n\t\t\t\t\t\t\t\t\t\tclassName='form-input firstName'\n\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\t\tid='lastName'\n\t\t\t\t\t\t\t\t\t\tname='Lname'\n\t\t\t\t\t\t\t\t\t\tplaceholder='Last Name'\n\t\t\t\t\t\t\t\t\t\tclassName='form-input lastName'\n\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t<Col sm={12}>\n\t\t\t\t\t\t\t\t\t<div className='form-group'>\n\t\t\t\t\t\t\t\t\t\t<label className='mt-4 mb-1'>\n\t\t\t\t\t\t\t\t\t\t\t<h5>Department</h5>\n\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\t\t\t\tid='department'\n\t\t\t\t\t\t\t\t\t\t\tname='department'\n\t\t\t\t\t\t\t\t\t\t\tclassName='form-input select'\n\t\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<option value='' defaultValue disabled>\n\t\t\t\t\t\t\t\t\t\t\t\tSelect a Department\n\t\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value='Marketing &amp; Sales'>\n\t\t\t\t\t\t\t\t\t\t\t\tMarketing &amp; Sales\n\t\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value='Design'>Design</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value='Engineering'>Engineering</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value='Finance'>Finance</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value='Legal'>Legal</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value='HR'>HR</option>\n\t\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t<Col className='mt-5' style={{ textAlign: 'right' }}>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tvariant='light'\n\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: 'transparent',\n\t\t\t\t\t\t\t\t\t\t\tborderColor: 'rgba(220, 220, 220, .5)',\n\t\t\t\t\t\t\t\t\t\t\tcolor: 'inherit',\n\t\t\t\t\t\t\t\t\t\t\tmarginRight: '15px',\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tclassName='btn-cancel p-3'\n\t\t\t\t\t\t\t\t\t\tonClick={handleCancelBtn}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tvariant='primary'\n\t\t\t\t\t\t\t\t\t\tclassName='btn btn-submit p-3'\n\t\t\t\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tAdd Employee\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t</Container>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n","/Users/devanup/Website/Employee Management/Team-34-Front-End/t34-app/src/components/Tasks/CreateTaskForm.js",["181","182","183","184","185"],[],"import './CreateTaskForm.css';\nimport { Button, Col, Container, Row } from 'react-bootstrap';\nimport { useEffect, useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faXmark } from '@fortawesome/free-solid-svg-icons';\nimport { createTask } from './createTask';\nimport { fetchEmployees } from '../Employees/fetchEmployees';\nimport { fetchEmployeeByID } from '../Employees/fetchEmployeeByID';\nimport AvailableEmployees from '../Employees/AvailableEmployees';\n\nexport const CreateTaskForm = ({ handleCloseFormBtn, tasks, updateTasks }) => {\n\tconst [formSuccess, setFormSuccess] = useState(false);\n\tconst [selectedEmployee, setSelectedEmployee] = useState('');\n\n\tconst handleCancelBtn = () => {\n\t\thandleCloseFormBtn();\n\t};\n\n\tconst handleKeyDown = (e) => {\n\t\tif (e.key === 'Escape') {\n\t\t\thandleCancelBtn();\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tdocument.addEventListener('keydown', handleKeyDown);\n\t\treturn () => {\n\t\t\tdocument.removeEventListener('keydown', handleKeyDown);\n\t\t};\n\t}, []);\n\n\tconst handleRadioChange = (event) => {\n\t\tsetSelectedEmployee(event.target.value);\n\t};\n\n\tconst handleSubmit = async (event) => {\n\t\tevent.preventDefault();\n\t\tconst formData = new FormData(event.target);\n\t\tconst taskData = Object.fromEntries(formData.entries());\n\n\t\t// Add the selected employee ID to the taskData object\n\t\ttaskData.employeeId = selectedEmployee;\n\n\t\tconst newTask = await createTask(taskData);\n\n\t\tif (newTask) {\n\t\t\t// console.log('New task added:', newTask);\n\t\t\tsetFormSuccess(true);\n\t\t\tconst updatedTasks = [...tasks, newTask];\n\t\t\tupdateTasks(updatedTasks);\n\t\t\thandleShowFormBtn();\n\t\t\thandleCloseFormBtn();\n\t\t} else {\n\t\t\tconsole.error('Failed to add task');\n\t\t}\n\t};\n\n\tconst handleShowFormBtn = () => {\n\t\tsetFormSuccess(false);\n\t};\n\n\treturn (\n\t\t<div className='form-flex-wrap'>\n\t\t\t{!formSuccess && (\n\t\t\t\t<div className='form-overlay' onClick={handleCancelBtn}></div>\n\t\t\t)}\n\t\t\t{!formSuccess && (\n\t\t\t\t<div className='form-wrap create-task-form-wrap'>\n\t\t\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t\t\t<h1 className='mb-4 p-0'>Create New Task</h1>\n\t\t\t\t\t\t<Container fluid className='p-0'>\n\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t<label className='mt-4 mb-1'>\n\t\t\t\t\t\t\t\t\t<h5>Description</h5>\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<Col lg={12}>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\t\tid='description'\n\t\t\t\t\t\t\t\t\t\tname='description'\n\t\t\t\t\t\t\t\t\t\tplaceholder='What needs to be done?'\n\t\t\t\t\t\t\t\t\t\tclassName='form-input description'\n\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Col>\n\n\t\t\t\t\t\t\t\t<Col sm={6}>\n\t\t\t\t\t\t\t\t\t<div className='form-group'>\n\t\t\t\t\t\t\t\t\t\t<label className='mt-4 mb-1'>\n\t\t\t\t\t\t\t\t\t\t\t<h5>Priority</h5>\n\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\t\t\t\tid='priority'\n\t\t\t\t\t\t\t\t\t\t\tname='priority'\n\t\t\t\t\t\t\t\t\t\t\tclassName='form-input select'\n\t\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<option value='' defaultValue disabled>\n\t\t\t\t\t\t\t\t\t\t\t\tSelect Priority\n\t\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value='low'>Low</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value='medium'>Medium</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value='high'>High</option>\n\t\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t<Col sm={6}>\n\t\t\t\t\t\t\t\t\t<div className='form-group'>\n\t\t\t\t\t\t\t\t\t\t<label className='mt-4 mb-1'>\n\t\t\t\t\t\t\t\t\t\t\t<h5>Completion Status</h5>\n\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\t\t\t\tid='status'\n\t\t\t\t\t\t\t\t\t\t\tname='status'\n\t\t\t\t\t\t\t\t\t\t\tclassName='form-input select'\n\t\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<option value='' defaultValue disabled>\n\t\t\t\t\t\t\t\t\t\t\t\tSelect Status\n\t\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value='not started'>Not-started</option>\n\t\t\t\t\t\t\t\t\t\t\t{/* <option value='In-progress'>In-progress</option> */}\n\t\t\t\t\t\t\t\t\t\t\t<option value='completed'>Completed</option>\n\t\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t<label className='mt-4 mb-1'>\n\t\t\t\t\t\t\t\t\t<h5>Available Staffs</h5>\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<Col lg={12}>\n\t\t\t\t\t\t\t\t\t{/* <input\n\t\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\t\tid='asignee'\n\t\t\t\t\t\t\t\t\t\tplaceholder='Invite team member'\n\t\t\t\t\t\t\t\t\t\tclassName='form-input description'\n\t\t\t\t\t\t\t\t\t/> */}\n\n\t\t\t\t\t\t\t\t\t{/* <div className='name-suggestion'>\n\t\t\t\t\t\t\t\t\t\t<ul className='m-0 p-0'>\n\t\t\t\t\t\t\t\t\t\t\t<li className=' mt-1 mb-1 name-list'>Jason Smith</li>\n\t\t\t\t\t\t\t\t\t\t\t<li className=' mt-1 mb-1 name-list'>Kayla Davis</li>\n\t\t\t\t\t\t\t\t\t\t\t<li className=' mt-1 mb-1 name-list'>Andrew Chen</li>\n\t\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t\t</div> */}\n\t\t\t\t\t\t\t\t\t<AvailableEmployees handleRadioChange={handleRadioChange} />\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t<Col style={{ textAlign: 'right' }} className='mt-5 '>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tvariant='light'\n\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: 'transparent',\n\t\t\t\t\t\t\t\t\t\t\tborderColor: 'rgba(220, 220, 220, .5)',\n\t\t\t\t\t\t\t\t\t\t\tcolor: 'inherit',\n\t\t\t\t\t\t\t\t\t\t\tmarginRight: '15px',\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tclassName='btn-cancel p-3'\n\t\t\t\t\t\t\t\t\t\tonClick={handleCancelBtn}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tvariant='primary'\n\t\t\t\t\t\t\t\t\t\tclassName='btn btn-submit p-3'\n\t\t\t\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tCreate Task\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t</Container>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n","/Users/devanup/Website/Employee Management/Team-34-Front-End/t34-app/src/components/Employees/fetchEmployees.js",[],[],"/Users/devanup/Website/Employee Management/Team-34-Front-End/t34-app/src/components/Tasks/fetchTasks.js",[],[],"/Users/devanup/Website/Employee Management/Team-34-Front-End/t34-app/src/components/Employees/createEmployee.js",[],[],"/Users/devanup/Website/Employee Management/Team-34-Front-End/t34-app/src/components/Employees/deleteEmployee.js",[],[],"/Users/devanup/Website/Employee Management/Team-34-Front-End/t34-app/src/components/Employees/updateEmployee.js",[],[],"/Users/devanup/Website/Employee Management/Team-34-Front-End/t34-app/src/components/Employees/EmployeeContext.js",[],[],"/Users/devanup/Website/Employee Management/Team-34-Front-End/t34-app/src/components/Employees/fetchEmployeeByID.js",[],[],"/Users/devanup/Website/Employee Management/Team-34-Front-End/t34-app/src/components/Tasks/TaskContext.js",[],[],"/Users/devanup/Website/Employee Management/Team-34-Front-End/t34-app/src/components/Tasks/createTask.js",[],[],"/Users/devanup/Website/Employee Management/Team-34-Front-End/t34-app/src/components/Tasks/fetchTaskByID.js",[],[],"/Users/devanup/Website/Employee Management/Team-34-Front-End/t34-app/src/components/Tasks/deleteTask.js",[],[],"/Users/devanup/Website/Employee Management/Team-34-Front-End/t34-app/src/components/Employees/AvailableEmployees.js",[],[],"/Users/devanup/Website/Employee Management/Team-34-Front-End/t34-app/src/components/Employees/EmployeeNameContext.js",[],[],{"ruleId":"186","severity":1,"message":"187","line":2,"column":16,"nodeType":"188","messageId":"189","endLine":2,"endColumn":19},{"ruleId":"186","severity":1,"message":"190","line":2,"column":21,"nodeType":"188","messageId":"189","endLine":2,"endColumn":30},{"ruleId":"186","severity":1,"message":"191","line":2,"column":32,"nodeType":"188","messageId":"189","endLine":2,"endColumn":35},{"ruleId":"186","severity":1,"message":"192","line":3,"column":10,"nodeType":"188","messageId":"189","endLine":3,"endColumn":25},{"ruleId":"186","severity":1,"message":"193","line":5,"column":2,"nodeType":"188","messageId":"189","endLine":5,"endColumn":17},{"ruleId":"186","severity":1,"message":"194","line":6,"column":2,"nodeType":"188","messageId":"189","endLine":6,"endColumn":18},{"ruleId":"186","severity":1,"message":"195","line":7,"column":2,"nodeType":"188","messageId":"189","endLine":7,"endColumn":15},{"ruleId":"186","severity":1,"message":"196","line":15,"column":10,"nodeType":"188","messageId":"189","endLine":15,"endColumn":16},{"ruleId":"186","severity":1,"message":"197","line":15,"column":18,"nodeType":"188","messageId":"189","endLine":15,"endColumn":23},{"ruleId":"186","severity":1,"message":"198","line":32,"column":9,"nodeType":"188","messageId":"189","endLine":32,"endColumn":21},{"ruleId":"199","severity":1,"message":"200","line":38,"column":5,"nodeType":"201","endLine":38,"endColumn":7,"suggestions":"202"},{"ruleId":"186","severity":1,"message":"203","line":87,"column":8,"nodeType":"188","messageId":"189","endLine":87,"endColumn":27},{"ruleId":"186","severity":1,"message":"204","line":96,"column":9,"nodeType":"188","messageId":"189","endLine":96,"endColumn":21},{"ruleId":"186","severity":1,"message":"205","line":18,"column":9,"nodeType":"188","messageId":"189","endLine":18,"endColumn":25},{"ruleId":"199","severity":1,"message":"206","line":23,"column":5,"nodeType":"201","endLine":23,"endColumn":7,"suggestions":"207"},{"ruleId":"186","severity":1,"message":"187","line":1,"column":16,"nodeType":"188","messageId":"189","endLine":1,"endColumn":19},{"ruleId":"186","severity":1,"message":"192","line":2,"column":10,"nodeType":"188","messageId":"189","endLine":2,"endColumn":25},{"ruleId":"186","severity":1,"message":"193","line":4,"column":2,"nodeType":"188","messageId":"189","endLine":4,"endColumn":17},{"ruleId":"186","severity":1,"message":"208","line":5,"column":2,"nodeType":"188","messageId":"189","endLine":5,"endColumn":15},{"ruleId":"186","severity":1,"message":"195","line":6,"column":2,"nodeType":"188","messageId":"189","endLine":6,"endColumn":15},{"ruleId":"186","severity":1,"message":"209","line":7,"column":2,"nodeType":"188","messageId":"189","endLine":7,"endColumn":19},{"ruleId":"186","severity":1,"message":"210","line":11,"column":10,"nodeType":"188","messageId":"189","endLine":11,"endColumn":24},{"ruleId":"186","severity":1,"message":"211","line":12,"column":10,"nodeType":"188","messageId":"189","endLine":12,"endColumn":21},{"ruleId":"186","severity":1,"message":"187","line":2,"column":16,"nodeType":"188","messageId":"189","endLine":2,"endColumn":19},{"ruleId":"186","severity":1,"message":"192","line":3,"column":10,"nodeType":"188","messageId":"189","endLine":3,"endColumn":25},{"ruleId":"186","severity":1,"message":"193","line":5,"column":2,"nodeType":"188","messageId":"189","endLine":5,"endColumn":17},{"ruleId":"186","severity":1,"message":"212","line":6,"column":2,"nodeType":"188","messageId":"189","endLine":6,"endColumn":9},{"ruleId":"186","severity":1,"message":"208","line":7,"column":2,"nodeType":"188","messageId":"189","endLine":7,"endColumn":15},{"ruleId":"186","severity":1,"message":"213","line":8,"column":2,"nodeType":"188","messageId":"189","endLine":8,"endColumn":17},{"ruleId":"186","severity":1,"message":"209","line":9,"column":2,"nodeType":"188","messageId":"189","endLine":9,"endColumn":19},{"ruleId":"186","severity":1,"message":"214","line":11,"column":10,"nodeType":"188","messageId":"189","endLine":11,"endColumn":18},{"ruleId":"186","severity":1,"message":"214","line":6,"column":2,"nodeType":"188","messageId":"189","endLine":6,"endColumn":10},{"ruleId":"186","severity":1,"message":"212","line":7,"column":2,"nodeType":"188","messageId":"189","endLine":7,"endColumn":9},{"ruleId":"186","severity":1,"message":"208","line":8,"column":2,"nodeType":"188","messageId":"189","endLine":8,"endColumn":15},{"ruleId":"186","severity":1,"message":"215","line":11,"column":17,"nodeType":"188","messageId":"189","endLine":11,"endColumn":29},{"ruleId":"199","severity":1,"message":"200","line":85,"column":5,"nodeType":"201","endLine":85,"endColumn":11,"suggestions":"216"},{"ruleId":"186","severity":1,"message":"217","line":7,"column":31,"nodeType":"188","messageId":"189","endLine":7,"endColumn":41},{"ruleId":"199","severity":1,"message":"206","line":71,"column":5,"nodeType":"201","endLine":71,"endColumn":15,"suggestions":"218"},{"ruleId":"199","severity":1,"message":"219","line":28,"column":5,"nodeType":"201","endLine":28,"endColumn":7,"suggestions":"220"},{"ruleId":"186","severity":1,"message":"192","line":4,"column":10,"nodeType":"188","messageId":"189","endLine":4,"endColumn":25},{"ruleId":"186","severity":1,"message":"221","line":5,"column":10,"nodeType":"188","messageId":"189","endLine":5,"endColumn":17},{"ruleId":"186","severity":1,"message":"210","line":7,"column":10,"nodeType":"188","messageId":"189","endLine":7,"endColumn":24},{"ruleId":"186","severity":1,"message":"222","line":8,"column":10,"nodeType":"188","messageId":"189","endLine":8,"endColumn":27},{"ruleId":"199","severity":1,"message":"219","line":30,"column":5,"nodeType":"201","endLine":30,"endColumn":7,"suggestions":"223"},"no-unused-vars","'Col' is defined but never used.","Identifier","unusedVar","'Container' is defined but never used.","'Row' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'faClipboardList' is defined but never used.","'faClipboardCheck' is defined but never used.","'faPeopleGroup' is defined but never used.","'Routes' is defined but never used.","'Route' is defined but never used.","'selectedTask' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchTaskData'. Either include it or remove the dependency array.","ArrayExpression",["224"],"'handleAssigneeClick' is assigned a value but never used.","'emplAssigned' is assigned a value but never used.","'selectedEmployee' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchEmployeeData'. Either include it or remove the dependency array.",["225"],"'faCheckCircle' is defined but never used.","'faMagnifyingGlass' is defined but never used.","'fetchEmployees' is defined but never used.","'AddEmployee' is defined but never used.","'faClock' is defined but never used.","'faRectangleList' is defined but never used.","'faCircle' is defined but never used.","'faFloppyDisk' is defined but never used.",["226"],"'useContext' is defined but never used.",["227"],"React Hook useEffect has a missing dependency: 'handleKeyDown'. Either include it or remove the dependency array.",["228"],"'faXmark' is defined but never used.","'fetchEmployeeByID' is defined but never used.",["229"],{"desc":"230","fix":"231"},{"desc":"232","fix":"233"},{"desc":"234","fix":"235"},{"desc":"236","fix":"237"},{"desc":"238","fix":"239"},{"desc":"238","fix":"240"},"Update the dependencies array to be: [fetchTaskData]",{"range":"241","text":"242"},"Update the dependencies array to be: [fetchEmployeeData]",{"range":"243","text":"244"},"Update the dependencies array to be: [fetchTaskData, task]",{"range":"245","text":"246"},"Update the dependencies array to be: [employee, fetchEmployeeData]",{"range":"247","text":"248"},"Update the dependencies array to be: [handleKeyDown]",{"range":"249","text":"250"},{"range":"251","text":"250"},[1241,1243],"[fetchTaskData]",[1055,1057],"[fetchEmployeeData]",[2893,2899],"[fetchTaskData, task]",[2611,2621],"[employee, fetchEmployeeData]",[650,652],"[handleKeyDown]",[1018,1020]]